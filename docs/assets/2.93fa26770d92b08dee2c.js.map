{"version":3,"sources":["webpack:///./src/front/hoc/withEnterAnimation/index.js","webpack:///./src/front/hoc/withEnterAnimation/styled/AnimatedDiv.js","webpack:///./src/front/hoc/withEnterAnimation/withEnterAnimation.js","webpack:///./src/front/pages/login/Login.js","webpack:///./src/front/pages/login/index.js"],"names":["withEnterAnimation","fadeIn","keyframes","AnimatedDiv","styled","div","viewEnter","css","BaseComponent","WithEnterAnimation","passProps","props","Component","process","displayName","wrapDisplayName","Login","email","password","event","preventDefault","setState","target","value","trim","history","logUserIfNeeded","state","userLogin","login","response","payload","data","token","user","auth","setToken","setUserInfo","push","pathname","console","log","disconnectUser","isLogging","size","offset","handlesOnEmailChange","handlesOnPasswordChange","handlesOnLogin","goHome","PureComponent","isFetching","mapStateToProps","isAuthenticated","userAuth","mapDispatchToProps","dispatch","bindActionCreators","userAuthActions","compose","connect"],"mappings":"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","file":"2.93fa26770d92b08dee2c.js","sourcesContent":["// @flow\r\n\r\nimport withEnterAnimation from './withEnterAnimation';\r\n\r\nexport default withEnterAnimation;\r\n","// @flow\r\n\r\n// @region imports\r\nimport styled, { keyframes, css } from 'styled-components';\r\n// #endregion\r\n\r\nconst fadeIn = keyframes`\r\n  from {\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    transform: none;\r\n  }\r\n`;\r\n\r\nconst AnimatedDiv = styled.div`\r\n  ${({ viewEnter }) =>\r\n    viewEnter &&\r\n    css`\r\n      opacity: 0;\r\n      animation-name: ${fadeIn};\r\n      animation-timing-function: ease-in;\r\n      animation-duration: 0.7s;\r\n      animation-delay: 0s;\r\n      animation-fill-mode: both;\r\n    `};\r\n`;\r\n\r\nexport default AnimatedDiv;\r\n","// @flow\r\n\r\n// #region imports\r\nimport React, { Component } from 'react';\r\nimport wrapDisplayName from 'recompose/wrapDisplayName';\r\nimport AnimatedDiv from './styled/AnimatedDiv';\r\n// #endregion\r\n\r\n// #region flow types\r\ntype Props = any;\r\n\r\ntype State = any;\r\n// #endregion\r\n\r\nfunction withEnterAnimation() {\r\n  return (BaseComponent: any) => {\r\n    class WithEnterAnimation extends Component<Props, State> {\r\n      render() {\r\n        const { ...passProps } = this.props;\r\n\r\n        return (\r\n          <AnimatedDiv viewEnter={true}>\r\n            <BaseComponent {...passProps} />\r\n          </AnimatedDiv>\r\n        );\r\n      }\r\n    }\r\n\r\n    /* eslint-disable no-process-env */\r\n    if (process.env.NODE_ENV !== 'production') {\r\n      // HOC would obfuscate component name, this trick is helpful for dev (we don't care in production)\r\n      WithEnterAnimation.displayName = wrapDisplayName(\r\n        BaseComponent,\r\n        'withEnterAnimation',\r\n      );\r\n    }\r\n    /* eslint-enable no-process-env */\r\n\r\n    return WithEnterAnimation;\r\n  };\r\n}\r\n\r\nexport default withEnterAnimation;\r\n","// @flow\r\n\r\n// #region imports\r\nimport React, { PureComponent } from 'react';\r\nimport {\r\n  type Match,\r\n  type Location,\r\n  type RouterHistory,\r\n} from 'react-router-dom';\r\nimport Button from 'reactstrap/lib/Button';\r\nimport Row from 'reactstrap/lib/Row';\r\nimport Col from 'reactstrap/lib/Col';\r\nimport auth from '../../services/auth';\r\nimport { type UserAuthActions } from '../../types/redux/userAuth';\r\n// #endregion\r\n\r\n// #region flow types\r\nexport type Props = {\r\n  // react-router 4:\r\n  match: Match,\r\n  location: Location,\r\n  history: RouterHistory,\r\n\r\n  // userAuth:\r\n  isAuthenticated: boolean,\r\n  isFetching: boolean,\r\n  isLogging: boolean,\r\n} & UserAuthActions;\r\n\r\nexport type State = {\r\n  email: string,\r\n  password: string,\r\n};\r\n// #endregion\r\n\r\nclass Login extends PureComponent<Props, State> {\r\n  static defaultProps = {\r\n    isFetching: false,\r\n    isLogging: false,\r\n  };\r\n\r\n  state = {\r\n    email: '',\r\n    password: '',\r\n  };\r\n\r\n  // #region lifecycle methods\r\n  componentDidMount() {\r\n    const { disconnectUser } = this.props;\r\n\r\n    disconnectUser(); // diconnect user: remove token and user info\r\n  }\r\n\r\n  render() {\r\n    const { email, password } = this.state;\r\n\r\n    const { isLogging } = this.props;\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <Row>\r\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\r\n            <form className=\"form-horizontal\" noValidate>\r\n              <fieldset>\r\n                <legend>Login</legend>\r\n\r\n                <div className=\"form-group\">\r\n                  <label\r\n                    htmlFor=\"inputEmail\"\r\n                    className=\"col-lg-2 control-label\"\r\n                  >\r\n                    Email\r\n                  </label>\r\n                  <Col lg={12}>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      id=\"inputEmail\"\r\n                      placeholder=\"Email\"\r\n                      autoComplete=\"username email\"\r\n                      value={email}\r\n                      onChange={this.handlesOnEmailChange}\r\n                    />\r\n                  </Col>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label\r\n                    htmlFor=\"inputPassword\"\r\n                    className=\"col-lg-2 control-label\"\r\n                  >\r\n                    Password\r\n                  </label>\r\n                  <Col lg={12}>\r\n                    <input\r\n                      type=\"password\"\r\n                      className=\"form-control\"\r\n                      id=\"inputPassword\"\r\n                      placeholder=\"Password\"\r\n                      autoComplete=\"current-password\"\r\n                      value={password}\r\n                      onChange={this.handlesOnPasswordChange}\r\n                    />\r\n                  </Col>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <Col lg={{ size: 12 }}>\r\n                    <Button\r\n                      className=\"login-button btn-block\"\r\n                      color=\"primary\"\r\n                      disabled={isLogging}\r\n                      onClick={this.handlesOnLogin}\r\n                    >\r\n                      {isLogging ? (\r\n                        <span>\r\n                          login in... &nbsp;\r\n                          <i className=\"fa fa-spinner fa-pulse fa-fw\" />\r\n                        </span>\r\n                      ) : (\r\n                        <span>Login</span>\r\n                      )}\r\n                    </Button>\r\n                  </Col>\r\n                </div>\r\n              </fieldset>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={{ size: 4, offset: 4 }} xs={{ size: 10, offset: 1 }}>\r\n            <div className=\"pull-right\">\r\n              <Button className=\"btn-block\" onClick={this.goHome}>\r\n                back to home\r\n              </Button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n  // #endregion\r\n\r\n  // #region form inputs change callbacks\r\n  handlesOnEmailChange = (event: SyntheticEvent<>) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n      // should add some validator before setState in real use cases\r\n      this.setState({ email: event.target.value.trim() });\r\n    }\r\n  };\r\n\r\n  handlesOnPasswordChange = (event: SyntheticEvent<>) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n      // should add some validator before setState in real use cases\r\n      this.setState({ password: event.target.value.trim() });\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  // #region on login button click callback\r\n  handlesOnLogin = async (event: SyntheticEvent<>) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const { history, logUserIfNeeded } = this.props;\r\n\r\n    const { email, password } = this.state;\r\n\r\n    const userLogin = {\r\n      login: email,\r\n      password: password,\r\n    };\r\n\r\n    try {\r\n      const response = await logUserIfNeeded(userLogin);\r\n      const {\r\n        data: { token, user },\r\n      } = response.payload;\r\n\r\n      auth.setToken(token);\r\n      auth.setUserInfo(user);\r\n\r\n      history.push({ pathname: '/' }); // back to Home\r\n    } catch (error) {\r\n      /* eslint-disable no-console */\r\n      console.log('login went wrong..., error: ', error);\r\n      /* eslint-enable no-console */\r\n    }\r\n  };\r\n  // #endregion\r\n\r\n  // #region on go back home button click callback\r\n  goHome = (event: SyntheticEvent<>) => {\r\n    if (event) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const { history } = this.props;\r\n\r\n    history.push({ pathname: '/' });\r\n  };\r\n  // #endregion\r\n}\r\n\r\nexport default Login;\r\n","// @flow\r\n\r\n// #region imports\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport compose from 'recompose/compose';\r\nimport * as userAuthActions from '../../redux/modules/userAuth';\r\nimport Login from './Login';\r\nimport withEnterAnimation from '../../hoc/withEnterAnimation';\r\n// #endregion\r\n\r\n// #region redux map state and dispatch to props\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.userAuth.isAuthenticated,\r\n    isFetching: state.userAuth.isFetching,\r\n    isLogging: state.userAuth.isLogging,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return bindActionCreators(\r\n    {\r\n      ...userAuthActions,\r\n    },\r\n    dispatch,\r\n  );\r\n};\r\n// #endregion\r\n\r\nexport default compose(\r\n  withEnterAnimation(/* no option yet */),\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n)(Login);\r\n"],"sourceRoot":""}